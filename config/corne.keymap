/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        win_c: win_c {
            label = "WIN_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp C>
                , <&macro_release &kp LGUI>
                ;
        };
        ctrl_prtsc: ctrl_prtsc {
            label = "CTRL_PRSC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp PRINTSCREEN>
                , <&macro_release &kp LCTRL>
                ;
        };

        csc: csc {
            label = "CSC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp C>
                , <&macro_release &kp LSHIFT &kp LCTRL>
                ;
        };

        csv: csv {
            label = "CSV";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp V>
                , <&macro_release &kp LSHIFT &kp LCTRL>
                ;
        };

        mcopy: mcopy {
            label = "mcopy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };

        mpaste: mpaste {
            label = "mpaste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };

        undo: undo {
            label = "undo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };

        redo: redo {
            label = "redo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Y>
                , <&macro_release &kp LCTRL>
                ;
        };

        ptrun: ptrun {
            label = "ptrun";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LWIN>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LWIN>
                , <&macro_release &kp LALT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | LWR | SPC |   | SPC | RSE  | DEL |
            bindings = <
   &kp TAB    &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp GRAVE
   &kp LCTRL  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo 1 &kp SPACE    &kp SPACE &mo 2 &kp DEL
            >;
        };

        lower_layer {
// -----------------------------------------------------------------------------------------
// |  1   |  2  |  3  |  ^  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | CTRL |     | <-  |  v  | ->  |     |   |  +  | MB1 | MB2 | MB3 | SCU | BSLH |
// | SHFT |     |     |     |     |     |   |  _  |  =  |  [  |  ]  | SCD | SHFT |
//                    | ALT |     | SPC |   | SPC | MO3 | DEL |
            bindings = <
   &kp N1     &kp N2       &kp N3          &mmv MOVE_UP    &kp N4       &kp N5         &kp N6    &kp N7    &kp N8    &kp N9     &kp N0         &kp BSPC
   &kp LCTRL  &trans       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &trans      &kp PLUS  &mkp MB1  &mkp MB2  &mkp MB3   &msc SCRL_UP   &kp BSLH
   &kp LSHFT  &trans       &trans          &trans          &trans       &trans         &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT   &msc SCRL_DOWN &trans
                                           &kp LALT        &trans       &kp SPACE      &kp SPACE &mo 3     &kp DEL
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC | VUP |     |     |C+PSC| COPY|   |     | HOME| UP  | END |     |      |
// | CTRL | MUTE|UNDO |     |PASTE|C+S+V|   |     | LEFT| DOWN|RIGHT|PG_UP|      |
// | SHFT | VDWN|REDO |     |     |     |   |     |     |  =  |     |PG_DN| SHFT |
//                    | ALT | GUI | SPC |   | SPC |     | DEL |
            bindings = <
   &kp ESC    &kp C_VOL_UP &trans      &trans       &ctrl_prtsc &mcopy    &trans    &kp HOME &kp UP    &kp END   &trans    &trans
   &kp LCTRL  &kp C_MUTE   &undo       &trans       &mpaste     &csv      &trans    &kp LEFT &kp DOWN  &kp RIGHT &kp PG_UP &trans
   &kp LSHFT  &kp C_VOL_DN &redo       &trans       &trans      &trans    &trans    &trans   &kp EQUAL &trans    &kp PG_DN &trans
                                       &kp LALT     &kp LGUI    &kp SPACE &kp SPACE &mo 4    &kp DEL
            >;
        };

        function_layer {
// -----------------------------------------------------------------------------------------
// |  !   |  @  |  #  |  $  |  %  |  ^  |   |  &  |  *  |  (  |  )  |  -  |  =   |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | ALT |     | SPC |   | SPC |     | DEL |
            bindings = <
   &kp EXCL   &kp AT    &kp HASH  &kp DOLLAR &kp PRCNT &kp CARET    &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp MINUS &kp EQUAL
   &kp LCTRL  &trans    &trans    &trans     &trans    &trans       &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
   &kp LSHFT  &trans    &trans    &trans     &trans    &trans       &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                  &kp LALT   &trans    &kp SPACE    &kp SPACE &trans    &kp DEL
            >;
        };

        control_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | F1  | F2  | F3  | F4  | F5  | F6   |
// |SYS_RS|     |     |     |     |     |   | F7  | F8  | F9  | F10 | F11 | F12  |
// | BOOT |P_ON |P_OFF|P_TOG|     |     |   |     |     |     |     |     | BOOT |
//                    | ALT |     | SPC |   | SPC |     | DEL |
            bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
   &sys_reset &trans       &trans       &trans       &trans       &trans          &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &bootloader &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans &trans &trans &trans &trans &trans &trans &bootloader
                                        &kp LALT     &trans       &kp SPACE      &kp SPACE &trans &kp DEL
            >;
        };
    };
};